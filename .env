MONGO_URI=mongodb://localhost:27017/deva
JWT_SECRET=govindbhai

DEBUG=True
PORT=5000
HOST=0.0.0.0

# Environment Configuration for Job Data Processing Middleware

# Flask Application Settings
HOST=0.0.0.0
PORT=5000
DEBUG=False

# Ollama Configuration
OLLAMA_URL=http://localhost:11434
OLLAMA_MODEL=llama2
OLLAMA_TIMEOUT=120  # Timeout in seconds (increased for longer processing)

# Processing Limits
MAX_JOB_DESCRIPTION_LENGTH=10000    # Maximum characters in job description (increased from 4000)
MAX_TOKEN_GENERATION=2048          # Maximum tokens to generate (increased from 1024)
MAX_CONCURRENT_OLLAMA=3            # Maximum concurrent Ollama requests (increased from 2)

# Rate Limiting
MAX_REQUESTS_PER_MINUTE=30         # Maximum requests per minute (increased from 20)
RATE_LIMIT_WINDOW=60               # Rate limit window in seconds

# Ollama Model Configuration
OLLAMA_THREADS=4                   # Number of threads for Ollama processing
OLLAMA_CONTEXT_SIZE=6096           # Context size for Ollama model (affects memory usage)

# Logging
LOG_LEVEL=INFO                     # Log level (DEBUG, INFO, WARNING, ERROR)

# Cache Configuration
CACHE_TTL=3600                     # Cache time-to-live in seconds (1 hour)
CACHE_MAX_SIZE=1000                # Maximum number of items in cache

# Example values for different use cases:

# For heavy processing (8-10 minutes per job):
# OLLAMA_TIMEOUT=600
# MAX_TOKEN_GENERATION=4096
# MAX_JOB_DESCRIPTION_LENGTH=10000

# For fast processing (1-2 minutes per job):
# OLLAMA_TIMEOUT=120
# MAX_TOKEN_GENERATION=1024
# MAX_JOB_DESCRIPTION_LENGTH=6000

# For development/testing:
# DEBUG=True
# LOG_LEVEL=DEBUG
# MAX_REQUESTS_PER_MINUTE=100